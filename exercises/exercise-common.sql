-- 1
USE ships;
SELECT NAME, LAUNCHED
FROM SHIPS
WHERE NAME = CLASS;

-- 2
USE movies;

INSERT INTO MOVIE(TITLE, YEAR, LENGTH, INCOLOR, STUDIONAME, PRODUCERC#)
VALUES ('ABCD Trek Star 2', 2021, 345, 'Y', 'Paramount', 123);

SELECT *
FROM MOVIE
WHERE TITLE LIKE '%Star%'
  AND TITLE LIKE '%Trek%'
ORDER BY YEAR DESC, TITLE;

-- 3
USE movies;

SELECT DISTINCT *
FROM STARSIN
         INNER JOIN MOVIESTAR on MOVIESTAR.NAME = STARSIN.STARNAME
WHERE MOVIESTAR.BIRTHDATE BETWEEN '1970/1/1' AND '1980/7/1';

-- 4
USE ships;

SELECT DISTINCT NAME
FROM SHIPS
         INNER JOIN OUTCOMES on SHIPS.NAME = OUTCOMES.SHIP
WHERE NAME LIKE '[CK]%';

-- 5
USE ships;

SELECT DISTINCT CLASSES.COUNTRY
FROM SHIPS
         INNER JOIN CLASSES on CLASSES.CLASS = SHIPS.CLASS
         INNER JOIN OUTCOMES on SHIPS.NAME = OUTCOMES.SHIP
WHERE OUTCOMES.RESULT = 'sunk';

-- 6
USE ships;

SELECT DISTINCT COUNTRY
FROM CLASSES
WHERE (SELECT COUNT(DISTINCT NAME)
       FROM SHIPS
                INNER JOIN OUTCOMES on SHIPS.NAME = OUTCOMES.SHIP
                INNER JOIN CLASSES C1 on C1.CLASS = SHIPS.CLASS
       WHERE RESULT != 'sunk'
         AND C1.COUNTRY = COUNTRY) > 0;

-- 8
USE ships;

INSERT INTO CLASSES(CLASS, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT)
VALUES ('KIRO', 'bb', 'BULGARIA', 34, 1, 100);

SELECT COUNTRY, COUNT(SHIPS.NAME) AS SHIP_COUNT
FROM CLASSES
         LEFT OUTER JOIN SHIPS on CLASSES.CLASS = SHIPS.CLASS
WHERE YEAR(SHIPS.LAUNCHED) > 1921
   OR SHIPS.NAME IS NULL
GROUP BY COUNTRY;

-- 9
USE ships;

SELECT CLASS, COUNTRY, BORE * 2.54 AS BORE_CM
FROM CLASSES
WHERE NUMGUNS IN (6, 8, 10);

-- 10
USE ships;

SELECT DISTINCT COUNTRY
FROM CLASSES C1
WHERE (SELECT COUNT(DISTINCT BORE)
       FROM CLASSES C2
       WHERE C1.COUNTRY = C2.COUNTRY) > 1;

-- 11
USE ships;

INSERT INTO CLASSES(CLASS, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT)
VALUES ('INDIA', 'ba', 'INDIA', 34, 1, 100);

SELECT DISTINCT COUNTRY
FROM CLASSES
WHERE NUMGUNS = (SELECT MAX(NUMGUNS) FROM CLASSES);

-- 12
USE pc;

SELECT *
FROM pc
         INNER JOIN product p1 on p1.model = pc.model
WHERE price < (SELECT MIN(price)
               FROM laptop
                        INNER JOIN product p2 on p2.model = laptop.model
               WHERE p1.maker = p2.maker);

-- 13
USE pc;

SELECT *
FROM pc
         INNER JOIN product p1 on p1.model = pc.model
WHERE price < (SELECT MIN(price)
               FROM laptop
                        INNER JOIN product p2 on p2.model = laptop.model
               WHERE p1.maker = p2.maker)
  AND price < (SELECT MIN(price)
               FROM printer
                        INNER JOIN product p2 on p2.model = printer.model
               WHERE p1.maker = p2.maker);
